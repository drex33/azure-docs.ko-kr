### YamlMime:FAQ
metadata:
  title: Linux의 App Service FAQ
  description: Azure App Service의 기본 제공 Linux 컨테이너에 대한 질문과 대답을 찾습니다.
  keywords: azure app service, web app, faq, linux, oss, web app for containers, multi-container, multicontainer
  author: msangapu-msft
  ms.topic: article
  ms.service: app-service
  ms.date: 10/30/2018
  ms.author: msangapu
  ms.custom: seodec18
  ms.openlocfilehash: 737fcf42e351822da58e5e4c493f120cdfd6c4dd
  ms.sourcegitcommit: 702df701fff4ec6cc39134aa607d023c766adec3
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "131462407"
title: Linux의 Azure App Service에 대한 FAQ
summary: >
  Linux의 App Service를 릴리스하면서 현재 플랫폼에 기능을 추가하고 플랫폼을 더욱 개선하기 위한 작업을 진행하고 있습니다. 이 문서는 고객이 최근에 요청한 질문에 대한 대답을 제공합니다.


  질문이 있는 경우 이 문서에 댓글을 달아주세요.
sections:
- name: 기본 제공 이미지
  questions:
  - question: >
      플랫폼에서 제공하는 기본 제공 Docker 컨테이너를 분기하려고 합니다. 이러한 파일은 어디서 찾을 수 있나요?
    answer: "[GitHub](https://github.com/Azure-App-Service/ImageBuilder)에서 모든 Docker 파일을 찾을 수 있습니다.\n          \n"
  - question: >
      런타임 스택을 구성할 때 시작 파일 섹션에 대해 예상되는 값은 무엇인가요?
    answer: >
      | 스택           | 예상 값                                                                         |

      |-----------------|----------------------------------------------------------------------------------------|

      | Java SE         | JAR 앱을 시작하는 명령(예: `java -jar /home/site/wwwroot/app.jar --server.port=80`) |

      | Tomcat          | 필요한 구성을 수행할 스크립트의 위치(예: `/home/site/deployments/tools/startup_script.sh`)          |

      | Node.js         | PM2 구성 파일 또는 스크립트 파일                                |

      | .NET Core       | `dotnet <myapp>.dll`로 컴파일된 DLL 이름                                 |

      | PHP             | 선택적 [사용자 지정 시작](./configure-language-php.md?pivots=platform-linux#customize-start-up) |

      | Python          | 선택적 [시작 스크립트](./configure-language-python.md#customize-startup-command) |

      | Ruby            | 앱을 초기화할 Ruby 스크립트                        |


      이러한 명령이나 스크립트는 기본 제공 Docker 컨테이너가 시작된 후 애플리케이션 코드가 시작되기 전에 실행됩니다.
- name: 관리
  questions:
  - question: >
      Azure Portal에서 다시 시작 단추를 누르면 어떻게 되나요?
    answer: >
      이 작업은 Docker 다시 시작과 동일합니다.
  - question: >
      앱 컨테이너 가상 머신(VM)에 연결하기 위해 Secure Shell(SSH)을 사용할 수 있나요?
    answer: >
      예. SCM(원본 제어 관리) 사이트를 통해 수행할 수 있습니다.


      > [!NOTE]

      > SSH, SFTP 또는 Visual Studio Code를 사용하여 로컬 개발 컴퓨터에서 직접 앱 컨테이너에 연결할 수도 있습니다(Node.js 앱 라이브 디버깅을 위해). 자세한 내용은 [Linux App Service의 원격 디버깅 및 SSH](https://azure.github.io/AppService/2018/05/07/New-SSH-Experience-and-Remote-Debugging-for-Linux-Web-Apps.html)를 참조하세요.

      >
  - question: >
      SDK 또는 Azure Resource Manager 템플릿을 통해 Linux App Service 계획을 어떻게 만들 수 있나요?
    answer: >
      앱 서비스의 **예약** 필드를 *true* 로 설정합니다.
- name: 연속 통합 및 배포
  questions:
  - question: >
      Docker Hub에서 이미지를 업데이트한 후에도 웹앱에서 여전히 기존 Docker 컨테이너 이미지를 사용합니다. 사용자 지정 컨테이너의 지속적인 통합 및 배포를 지원하나요?
    answer: >
      예, Azure Container Registry 또는 DockerHub에 대한 지속적인 통합/배포를 설정하려면 [Web App for Containers를 사용한 지속적인 배포](./deploy-ci-cd-custom-container.md) 문서를 확인하세요. 프라이빗 레지스트리의 경우 웹앱을 중지했다가 다시 시작하여 컨테이너를 새로 고칠 수 있습니다. 또는 컨테이너를 강제로 새로 고침하도록 더미 애플리케이션을 변경 또는 추가할 수 있습니다.
  - question: >
      스테이징 환경이 지원되나요?
    answer: >
      예.
  - question: >
      ‘WebDeploy/MSDeploy’를 사용하여 내 웹앱을 배포할 수 있나요?
    answer: >
      예. `WEBSITE_WEBDEPLOY_USE_SCM`이라는 앱 설정을 *false* 로 설정해야 합니다.
  - question: >
      Linux 웹앱을 사용할 때 내 애플리케이션의 Git 배포가 실패합니다. 이 문제를 어떻게 해결할 수 있나요?
    answer: >
      Linux 웹앱에 대한 Git 배포가 실패하면 다음 옵션 중 하나를 선택하여 애플리케이션 코드를 배포할 수 있습니다.


      - 지속적인 업데이트(미리 보기) 기능 사용: Azure 지속적인 업데이트를 사용하도록 Azure DevOps Git 리포지토리 또는 GitHub 리포지토리에 앱의 소스 코드를 저장할 수 있습니다. 자세한 내용은 [Linux 웹앱에 지속적인 업데이트를 구성하는 방법](https://blogs.msdn.microsoft.com/devops/2017/05/10/use-azure-portal-to-setup-continuous-delivery-for-web-app-on-linux/)을 참조하세요.


      - [ZIP 배포 API](https://github.com/projectkudu/kudu/wiki/Deploying-from-a-zip-file) 사용: 이 API를 사용하려면 [웹앱에 SSH를 실행하고](configure-linux-open-ssh-session.md) 코드를 배포할 폴더로 이동합니다. 다음 코드를 실행하세요.

         ```bash
         curl -X POST -u <user> --data-binary @<zipfile> https://{your-sitename}.scm.azurewebsites.net/api/zipdeploy
         ```

         `curl` 명령을 찾을 수 없다는 오류가 발생하면 이전 `curl` 명령을 실행하기 전에 `apt-get install curl`을 사용하여 curl을 설치해야 합니다.
- name: 언어 지원
  questions:
  - question: >
      Node.js 애플리케이션에서 웹 소켓을 사용하려고 합니다. 특별한 설정이나 구성이 필요한가요?
    answer: >
      예, 서버 쪽 Node.js 코드에서 `perMessageDeflate`를 비활성화해야 합니다. 예를 들어, socket.io를 사용하고 있다면 다음 코드를 사용합니다.


      ```nodejs

      const io = require('socket.io')(server,{
        perMessageDeflate :false
      });

      ```
  - question: >
      컴파일되지 않은 .NET Core 앱을 지원하나요?
    answer: >
      예.
  - question: >
      작성기를 PHP 앱의 종속성 관리자로 지원하나요?
    answer: >
      예, Git 배포 중에 Kudu는 사용자가 PHP 애플리케이션을 배포하고 있음을 감지해야 합니다(composer.lock 파일의 존재 덕분). 그러면 Kudu가 작성기 설치를 트리거합니다.
- name: 사용자 지정 컨테이너
  questions:
  - question: >
      ACR에서 이미지를 끌어와서 App Service에서 관리 ID를 사용할 수 있나요?
    answer: >
      예. 이 기능은 Azure CLI에서 사용할 수 있습니다. [시스템이 할당한 ID](https://github.com/Azure/app-service-linux-docs/blob/master/HowTo/use_system-assigned_managed_identities.md) 또는 [사용자 할당 ID](https://github.com/Azure/app-service-linux-docs/blob/master/HowTo/use_user-assigned_managed_identities.md)를 사용할 수 있습니다. 이 기능은 현재 Azure Portal에서 지원되지 않습니다.
  - question: >
      나만의 사용자 지정 컨테이너를 사용하고 있습니다. `/home/` 디렉터리에 대한 SMB 공유를 플랫폼에 탑재하려 합니다.
    answer: >
      `WEBSITES_ENABLE_APP_SERVICE_STORAGE` 설정이 **지정되지 않았** 거나 *false* 로 설정된 경우 `/home/` 디렉터리는 확장 인스턴스 간에 **공유되지 않으며** 작성된 파일은 다시 시작해도 **지속되지 않습니다**. 명시적으로 `WEBSITES_ENABLE_APP_SERVICE_STORAGE`를 *true* 로 설정하면 마운트가 활성화됩니다. 이 설정이 true로 설정 되 면 탑재를 사용 하지 않도록 설정 하려는 경우 명시적으로 `WEBSITES_ENABLE_APP_SERVICE_STORAGE` *false* 로 설정 해야 합니다.
  - question: >
      내 사용자 지정 컨테이너는 시작하는 데 시간이 오래 걸리고 플랫폼이 시작을 마무리하기 전에 컨테이너를 다시 시작합니다.
    answer: >
      컨테이너를 다시 시작하기 전에 플랫폼이 대기할 시간을 구성할 수 있습니다. 이를 수행하려면 `WEBSITES_CONTAINER_START_TIME_LIMIT` 앱 설정을 원하는 값으로 설정합니다. 기본값은 230초이고 최댓값은 1800초입니다.
  - question: >
      프라이빗 레지스트리 서버 URL의 형식은 무엇인가요?
    answer: >
      `http://` 또는 `https://`를 포함하여 전체 레지스트리 URL을 입력합니다.
  - question: >
      프라이빗 레지스트리 옵션에서 이미지 이름의 형식은 무엇인가요?
    answer: >
      프라이빗 레지스트리 URL(예: myacr.azurecr.io/dotnet:latest)을 포함하여 전체 이미지 이름을 추가합니다. 사용자 지정 포트를 사용하는 이미지 이름은 [포털을 통해 입력할 수 없습니다](https://feedback.azure.com/d365community/). `docker-custom-image-name`을 설정하려면 [`az` 명령줄 도구](/cli/azure/webapp/config/container#az_webapp_config_container_set)를 사용합니다.
  - question: >
      사용자 지정 컨테이너 이미지에 포트를 두 개 이상 표시할 수 있나요?
    answer: >
      둘 이상의 포트 노출을 지원하지 않습니다.
  - question: >
      사용자 고유의 스토리지를 가져올 수 있나요?
    answer: >
      예, [사용자 고유의 스토리지 가져오기](./configure-connect-to-azure-storage.md)는 미리 보기로 제공됩니다.
  - question: >
      내 사용자 지정 컨테이너의 파일 시스템 또는 실행 중인 프로세스를 SCM 사이트에서 찾을 수 없는 이유는 무엇인가요?
    answer: >
      SCM 사이트는 별도의 컨테이너에서 실행됩니다. 사용자가 앱 컨테이너의 파일 시스템 또는 실행 중인 프로세스를 확인할 수 없습니다.
  - question: >
      사용자 지정 컨테이너에서 HTTPS를 구현해야 하나요?
    answer: >
      아니요. 플랫폼에서는 공유 프런트 엔드에서 HTTPS 종료를 처리합니다.
  - question: >
      사용자 지정 컨테이너에 WEBSITES_PORT를 사용해야 하나요?
    answer: >
      예, 사용자 지정 컨테이너에 필요합니다. 사용자 지정 포트를 수동으로 구성하려면 컨테이너에 바인딩할 포트 값과 함께 Dockerfile 및 앱 설정 WEBSITES_PORT의 EXPOSE 명령을 사용합니다.
  - question: >
      Docker 이미지에서 ASPNETCORE_URLS를 사용할 수 있나요?
    answer: >
      예, .NET Core 앱이 시작되기 전에 환경 변수를 덮어씁니다.

      예를 들어 Init.sh 스크립트에서: export ASPNETCORE_URLS={Your value}
- name: Docker Compose를 사용하는 다중 컨테이너
  questions:
  - question: >
      다중 컨테이너를 사용하도록 ACR(Azure Container Registry)을 구성하려면 어떻게 할까요?
    answer: >
      다중 컨테이너에서 ACR을 사용하기 위해 **모든 컨테이너 이미지** 는 동일한 ACR 레지스트리 서버에 호스트되어야 합니다. 동일한 레지스트리 서버에 위치하면 애플리케이션 설정을 만든 다음, Docker Compose 구성 파일을 업데이트하여 ACR 이미지 이름을 포함해야 합니다.


      다음 애플리케이션 설정을 만듭니다.


      - DOCKER_REGISTRY_SERVER_USERNAME

      - DOCKER_REGISTRY_SERVER_URL(전체 URL, 예: `https://<server-name>.azurecr.io`)

      - DOCKER_REGISTRY_SERVER_PASSWORD(ACR 설정에서 관리자 액세스 사용)


      구성 파일 내에서 다음 예제와 같이 ACR 이미지를 참조합니다.


      ```yaml

      image: <server-name>.azurecr.io/<image-name>:<tag>

      ```
  - question: >
      인터넷에 액세스할 수 있는 컨테이너를 알려면 어떻게 할까요?
    answer: >
      - 하나의 컨테이너만이 액세스에 열릴 수 있습니다.

      - 포트 80 및 8080만이 액세스될 수 있습니다(노출된 포트)


      우선 순위로 액세스할 수 있는 컨테이너를 결정하는 규칙은 다음과 같습니다.


      - 컨테이너 이름으로 설정된 애플리케이션 설정 `WEBSITES_WEB_CONTAINER_NAME`

      - 포트 80 또는 8080을 정의하는 첫 번째 컨테이너

      - 위의 조건이 모두 true가 아닌 경우 파일에 정의된 첫 번째 컨테이너는 액세스될 수 있습니다(노출됨).
  - question: >
      Depends_on 사용 어떻게 할까요??
    answer: >
      `depends_on`옵션은 App Service에서 *지원 되지* 않으므로 무시 됩니다. [Docker의 제어 시작 및 종료 권장 사항](https://docs.docker.com/compose/startup-order/)에 따라 App Service 다중 컨테이너 앱은 시작 및 연결 끊김 모두에서 응용 프로그램 코드를 통해 종속성을 확인 해야 합니다.


      아래 예제 코드에서는 Redis 컨테이너가 실행 중인지 확인 하는 Python 앱을 확인 하는 방법을 보여 줍니다.


      ```python

      import time


      import redis

      from flask import Flask


      app = Flask(__name__)

      cache = redis.Redis(host='redis', port=6379)


      def get_hit_count():
          retries = 5
          while True:
              try:
                  return cache.incr('hits')
              except redis.exceptions.ConnectionError as exc:
                  if retries == 0:
                      raise exc
                  retries -= 1
                  time.sleep(0.5)

      @app.route('/')

      def hello():
          count = get_hit_count()
          return 'Hello from Azure App Service team! I have been seen {} times.\n'.format(count)

      if __name__ == "__main__":
          app.run(host="0.0.0.0", port=80, debug=True)
      ```

      ## <a name="web-sockets"></a>웹 소켓

      웹 소켓은 Linux 앱에서 지원됩니다.

      > [!IMPORTANT]

      > 웹 소켓은 현재 무료 App Service 계획의 Linux 앱에서 지원되지 않습니다. 이 제한을 제거하기 위해 노력하고 있으며 무료 App Service 계획에서 웹 소켓 연결을 5개까지 지원할 계획입니다.
- name: 가격 및 SLA
  questions:
  - question: >
      서비스가 일반 공급될 때 가격은 얼마인가요?
    answer: >
      가격은 SKU 및 지역에 따라 다르지만 가격 책정 페이지([App Service 가격 책정](https://azure.microsoft.com/pricing/details/app-service/linux/))에서 자세한 내용을 확인할 수 있습니다.
- name: 기타 질문
  questions:
  - question: >
      Linux 컨테이너에서 포트를 지정 어떻게 할까요??
    answer: >
      | 컨테이너 유형 | Description | 포트를 설정/사용 하는 방법 |

      |----------------|-------------|---------------------|

      | 기본 제공 컨테이너 | Linux 앱에 대 한 언어/프레임 워크 버전을 선택 하면 미리 정의 된 컨테이너가 선택 됩니다. | 앱 코드에서 올바른 포트를 가리키도록 하려면 PORT 환경 변수를 사용 합니다. |

      | 사용자 지정 컨테이너 | 컨테이너를 완전히 제어할 수 있습니다. | App Service은 컨테이너가 수신 하는 포트를 제어 하지 않습니다. 요청을 전달할 포트를 알고 있어야 합니다. 컨테이너가 80 또는 8080 포트를 수신 대기 하는 경우 App Service 자동으로 검색할 수 있습니다. 다른 포트를 수신 대기 하는 경우 WEBSITES_PORT 앱 설정을 포트 번호로 설정 하 고 App Service 컨테이너의 해당 포트로 요청을 전달 해야 합니다. WEBSITES_PORT 앱 설정은 컨테이너 내에서 효과가 없으며 컨테이너 내에서 환경 변수로 액세스할 수 없습니다. |
  - question: >
      Linux Webapp에서 파일 기반 데이터베이스 (예: SQLite)를 사용할 수 있나요?
    answer: >
      애플리케이션의 파일 시스템은 탑재된 네트워크 공유입니다. 이렇게 하면 여러 호스트에서 코드를 실행 해야 하는 규모 확장 시나리오를 사용할 수 있습니다. 아쉽게도이는 데이터베이스 파일에 대 한 배타적 잠금을 획득할 수 없기 때문에 SQLite와 같은 파일 기반 데이터베이스 공급자의 사용을 차단 합니다. 관리 되는 데이터베이스 서비스인 [Azure SQL](https://azure.microsoft.com/products/azure-sql/), [Azure Database for MySQL](https://azure.microsoft.com/services/mysql/) 또는 [Azure Database for PostgreSQL](https://azure.microsoft.com/services/postgresql/) 를 권장 합니다.
  - question: >
      애플리케이션 설정 이름에 지원되는 문자는 무엇입니까?
    answer: >
      애플리케이션 설정에 문자(A-Z, a-z), 숫자(0-9) 및 밑줄(_)만 사용할 수 있습니다.
  - question: >
      어디서 새 기능을 요청할 수 있나요?
    answer: >
      [Web Apps 사용자 의견 포럼](https://aka.ms/webapps-uservoice)에서 사용자의 아이디어를 제출할 수 있습니다. 아이디어 제목에 "[Linux]"를 붙여 주세요.
additionalContent: >-
  ## <a name="next-steps"></a>다음 단계


  - [Linux의 Azure App Service란?](overview.md#app-service-on-linux)

  - [Azure App Service에서 스테이징 환경 설정](deploy-staging-slots.md)

  - [Web App for Containers를 사용한 연속 배포](./deploy-ci-cd-custom-container.md)

  - [알아야 할 사항: Web Apps 및 Linux](https://techcommunity.microsoft.com/t5/apps-on-azure/things-you-should-know-web-apps-and-linux/ba-p/392472)

  - [환경 변수 및 앱 설정 참조](reference-app-settings.md)
